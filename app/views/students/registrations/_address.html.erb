<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/css/intlTelInput.css" />

<style type="text/css">
  .iti {
    display: block;
  }
  .hide {
    display: none;
  }
  .error {
    border: 1px solid #dc3545 !important;
  }
  .valid {
    border: 1px solid #28a745 !important;
  }
  .error-message {
    color: #dc3545;
    font-size: 80%;
    margin-top: 0.25rem;
  }
  .valid-message {
    color: #28a745;
    font-size: 80%;
    margin-top: 0.25rem;
  }
</style>

<%= f.fields_for :student_address do |a|%>
  <div class="row">
    <div class="col-12 col-md-6 form-group">
      <%= a.input :country, as: :country, selected: 'ET', priority_countries: ["ET", "US"], input_html: {class: "form-control custom-select"},include_blank: "select country"%>
    </div>
    <div class="col-12 col-md-6 form-group">
      <%= a.label :city, 'City' %><span class='required-asterisk' style='display:none;color:red;'>*</span>
      <%= a.input_field :city, class: 'form-control', autofocus: true, autocomplete: "city", placeholder: "City", required: true %>
    </div>
    
    
    <div class="col-12 col-md-6 form-group">
      <%= a.input :sub_city, input_html: { class: 'form-control', autocomplete: "sub_city" },placeholder: "Sub city"%>
    </div>
    <div class="col-12 col-md-6 form-group">
      <%= a.input :region, as: :select, :collection => ["Addis Ababa", "Afar", "Amahara","Benishangul Gumuz","Dire Dawa","Gambela","Harari","Oromia","Somali","Tigray","Sidama","Southern Nations Nationalities and People", "Southern West Nation"], input_html: { class: 'form-control' },placeholder: "Region"%>
    </div>
    <div class="col-12 col-md-6 form-group">
      <%= a.input :zone, input_html: { class: 'form-control', autocomplete: "zone" },placeholder: "Zone"%>
    </div>
    <div class="col-12 col-md-6 form-group">
      <%= a.input :woreda, input_html: { class: 'form-control', autocomplete: "woreda" },placeholder: "Woreda" %>
    </div>
    <div class="col-12 col-md-6 form-group">
      <%= a.input :special_location, input_html: { class: 'form-control', autocomplete: "special_location" },placeholder: "Special Location" %>
      <%= a.hint "if you are a foreigner state your address here and for Ethiopian students with new loaction" %>
    </div>
    <div class="col-12 col-md-6 form-group">
      <%= a.input :house_number, input_html: { class: 'form-control', autocomplete: "house_number" },placeholder: "House Number" %>
    </div>
    <div class="col-12 col-md-6 form-group">
      <%= a.label :moblie_number, 'Mobile Number' %><span class='required-asterisk' style='display:none;color:red;'>*</span>
      <%= a.input_field :moblie_number, class: 'form-control phone-input', autocomplete: "moblie_number", required: true %>
      <span id="valid-msg" class="valid-message hide">✓ Valid number</span>
      <span id="error-msg" class="error-message hide"></span>
    </div>
    <div class="col-12 col-md-6 form-group">
      <%= a.input :telephone_number, input_html: { class: 'form-control phone-input-alt', autocomplete: "telephone_number" }, label: "Alternative Phone Number"%>
      <span id="valid-msg-alt" class="valid-message hide">✓ Valid number</span>
      <span id="error-msg-alt" class="error-message hide"></span>
    </div>
  </div>
<%end%>

<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/intlTelInput.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Mobile number validation
    const mobileInput = document.querySelector("#student_student_address_attributes_moblie_number");
    const mobileErrorMsg = document.querySelector("#error-msg");
    const mobileValidMsg = document.querySelector("#valid-msg");
    
    const mobileIti = window.intlTelInput(mobileInput, {
      preferredCountries: ["et"],
      separateDialCode: true,
      utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js"
    });

    function resetMobileValidation() {
      mobileInput.classList.remove("error", "valid");
      mobileErrorMsg.classList.add("hide");
      mobileValidMsg.classList.add("hide");
    }

    function validateMobileNumber() {
      resetMobileValidation();
      if (mobileInput.value.trim()) {
        if (mobileIti.isValidNumber()) {
          mobileInput.classList.add("valid");
          mobileValidMsg.classList.remove("hide");
          return true;
        } else {
          mobileInput.classList.add("error");
          mobileErrorMsg.textContent = "Please enter a valid phone number";
          mobileErrorMsg.classList.remove("hide");
          return false;
        }
      }
      return false;
    }

    mobileInput.addEventListener('blur', validateMobileNumber);
    mobileInput.addEventListener('change', validateMobileNumber);
    mobileInput.addEventListener('keyup', resetMobileValidation);

    // Alternative phone number validation
    const altInput = document.querySelector("#student_student_address_attributes_telephone_number");
    const altErrorMsg = document.querySelector("#error-msg-alt");
    const altValidMsg = document.querySelector("#valid-msg-alt");
    
    const altIti = window.intlTelInput(altInput, {
      preferredCountries: ["et"],
      separateDialCode: true,
      utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js"
    });

    function resetAltValidation() {
      altInput.classList.remove("error", "valid");
      altErrorMsg.classList.add("hide");
      altValidMsg.classList.add("hide");
    }

    function validateAltNumber() {
      resetAltValidation();
      if (altInput.value.trim()) {
        if (altIti.isValidNumber()) {
          altInput.classList.add("valid");
          altValidMsg.classList.remove("hide");
          return true;
        } else {
          altInput.classList.add("error");
          altErrorMsg.textContent = "Please enter a valid phone number";
          altErrorMsg.classList.remove("hide");
          return false;
        }
      }
      return true; // Optional field, so return true if empty
    }

    altInput.addEventListener('blur', validateAltNumber);
    altInput.addEventListener('change', validateAltNumber);
    altInput.addEventListener('keyup', resetAltValidation);

    // Form validation
    const form = document.querySelector('form');
    form.addEventListener('submit', function(e) {
      if (!validateMobileNumber()) {
        e.preventDefault();
        mobileInput.focus();
      }
    });
  });
</script>